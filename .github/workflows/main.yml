name: Build APK

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  release:
    types: [released]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true
        cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
        cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
        architecture: x64
    - run: flutter --version
    - run: flutter pub get
    - run: flutter build apk
    - name: Store artifacts
      uses: actions/upload-artifact@v2
      with:
          path: build\app\outputs\flutter-apk\app-release.apk
          name: app

  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'release'
    steps:
    - name: Install Dependency
      run: pip install requests
    - name: Get Upload URL
      id: create_release
      shell: python
      env:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          tag_act: ${{ github.ref }}
      run: |
          import requests
          import os
          ref_tag = os.getenv('tag_act').split('/')[-1]
          access_token = os.getenv('access_token')
          headers = {
              "Accept":"application/vnd.github.v3+json",
              "Authorization": f"token {access_token}"
          }
          url = f"https://api.github.com/repos/naveen521kk/flutter-meme-app/releases/tags/{ref_tag}"
          c = requests.get(url,headers=headers)
          upload_url=c.json()['upload_url']
          print(f"::set-output name=upload_url::{upload_url}")
          print(f"::set-output name=tag_name::{ref_tag[1:]}")
    - uses: actions/download-artifact@v3
      with:
        name: app
    - name: Upload Release Asset
      id: upload-release
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-release.apk
          asset_name: meme_app-${{ steps.create_release.outputs.tag_name }}.apk
          asset_content_type:  application/vnd.android.package-archive
